// Mocks generated by Mockito 5.3.0 from annotations
// in domain/test/uses_cases/customer/list_customers_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:domain/domain.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCustomer_0 extends _i1.SmartFake implements _i2.Customer {
  _FakeCustomer_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [CustomerRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomerRepository extends _i1.Mock
    implements _i2.CustomerRepository {
  MockCustomerRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> createCustomer(_i2.Customer? customer) =>
      (super.noSuchMethod(Invocation.method(#createCustomer, [customer]),
              returnValue: _i3.Future<void>.value(),
              returnValueForMissingStub: _i3.Future<void>.value())
          as _i3.Future<void>);
  @override
  _i3.Future<List<_i2.Customer>> listCustomers() => (super.noSuchMethod(
          Invocation.method(#listCustomers, []),
          returnValue: _i3.Future<List<_i2.Customer>>.value(<_i2.Customer>[]))
      as _i3.Future<List<_i2.Customer>>);
  @override
  _i3.Future<_i2.Customer> customerDetails(String? customerId) =>
      (super.noSuchMethod(Invocation.method(#customerDetails, [customerId]),
              returnValue: _i3.Future<_i2.Customer>.value(_FakeCustomer_0(
                  this, Invocation.method(#customerDetails, [customerId]))))
          as _i3.Future<_i2.Customer>);
}
